CREATE DATABASE SQL_CAPSTONE_1;
---------------------------------------
USE SQL_CAPSTONE_1;
----------------------------------------
CREATE TABLE CUSTOMERS
(CUST_ID INT PRIMARY KEY,
 CUST_NAME VARCHAR(50),
 CUST_EMAIL VARCHAR(100)
);
-------------------------------------------
INSERT INTO CUSTOMERS VALUES
  (1, 'John Doe', 'johndoe@example.com'),
  (2, 'Jane Smith', 'janesmith@example.com'),
  (3, 'Robert Johnson', 'robertjohnson@example.com'),
  (4, 'Emily Brown', 'emilybrown@example.com'),
  (5, 'Michael Davis', 'michaeldavis@example.com'),
  (6, 'Sarah Wilson', 'sarahwilson@example.com'),
  (7, 'David Thompson', 'davidthompson@example.com'),
  (8, 'Jessica Lee', 'jessicalee@example.com'),
  (9, 'William Turner', 'williamturner@example.com'),
  (10, 'Olivia Martinez', 'oliviamartinez@example.com')
------------------------------------------------------------
  CREATE TABLE ORDERS
 (OrderID INT PRIMARY KEY,
  CustomerID INT,
  ProductName VARCHAR(50),
  OrderDate DATE,
  Quantity INT
);
----------------------------------------------------------
INSERT INTO ORDERS VALUES
  (101, 1, 'Product A', '2023-07-01', 5),
  (102, 2, 'Product B', '2023-07-02', 3),
  (103, 3, 'Product C', '2023-07-03', 2),
  (104, 4, 'Product A', '2023-07-04', 1),
  (105, 5, 'Product B', '2023-07-05', 4),
  (106, 6, 'Product C', '2023-07-06', 2),
  (107, 7, 'Product A', '2023-07-07', 3),
  (108, 8, 'Product B', '2023-07-08', 2),
  (109, 9, 'Product C', '2023-07-09', 5),
  (110, 10, 'Product A', '2023-07-10', 1);
----------------------------------------------------------------
CREATE TABLE PRODUCTS 
(ProductID INT PRIMARY KEY,
  ProductName VARCHAR(50),
  Price DECIMAL(10, 2)
);
--------------------------------------------------------------
INSERT INTO PRODUCTS VALUES
  (1001, 'Product A', 10.99),
  (1002, 'Product B', 8.99),
  (1003, 'Product C', 5.99),
  (1004, 'Product D', 12.99),
  (1005, 'Product E', 7.99),
  (1006, 'Product F', 6.99),
  (1007, 'Product G', 9.99),
  (1008, 'Product H', 11.99),
  (1009, 'Product I', 14.99),
  (1010, 'Product J', 4.99);
 -------------------------------------------------------------
-------------QUERIES FOR TASK 1-----------------------------------------
/*QUESTION 1*/
SELECT * FROM CUSTOMERS;

/*QUESTION 2*/
SELECT 
CUST_NAME,
CUST_EMAIL
FROM CUSTOMERS 
WHERE CUST_NAME LIKE 'J%%';

/*QUESTION 3*/
SELECT
ORDERID,
PRODUCTNAME,
QUANTITY 
FROM ORDERS;

/*QUESTION 4*/
SELECT 
C.CUST_NAME,
O.ORDERID
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON C.CUST_ID = O.CustomerID;

/*QUESTION 5*/
SELECT
C.CUST_NAME,
O.CUSTOMERID
FROM CUSTOMERS AS C
JOIN ORDERS AS O 
ON C.CUST_ID = O.CustomerID;


/*QUESTION 6*/
SELECT
*
FROM PRODUCTS
WHERE PRICE > 10.00;

/*QUESTION 7*/
SELECT
C.CUST_NAME,
O.ORDERDATE
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON C.CUST_ID = O.CustomerID
WHERE OrderDate >= '2023-07-05';

/*QUESTION 8*/
SELECT
AVG(PRICE)
FROM PRODUCTS;

/*QUESTION 9*/
SELECT
C.CUST_NAME,
O.QUANTITY AS TOATL_QUANTITY_ORDERED
FROM CUSTOMERS AS C 
JOIN ORDERS AS O 
ON C.CUST_ID = O.CustomerID;

/*QUESTION 10*/
SELECT
*
FROM PRODUCTS AS P
LEFT JOIN ORDERS AS O
ON P.ProductName = O.ProductName
WHERE OrderID IS NULL;

---------------------------------------------------------------------------
---------------------TASK 2-----------------------------

/*QUESTION 1*/
SELECT
TOP 5 O.CustomerID,C.CUST_NAME,O.Quantity
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON  C.CUST_ID = O.CustomerID
ORDER BY O.QUANTITY DESC;

/*QUESTION 2*/
SELECT
PRODUCTNAME,
AVG(PRICE) AS AVG_PRICE
FROM PRODUCTS
GROUP BY PRODUCTNAME;

/*QUESTION 3*/
SELECT
C.CUST_ID,
C.CUST_NAME,
O.ORDERID
FROM ORDERS AS O 
JOIN CUSTOMERS AS C
ON O.CustomerID = C.CUST_ID
WHERE O.ORDERID IS NULL;

/*QUESTION 4*/
SELECT
O.ORDERID,
O.PRODUCTNAME,
O.QUANTITY
FROM ORDERS AS O 
JOIN CUSTOMERS AS C 
ON O.CustomerID = C.CUST_ID
WHERE C.CUST_NAME LIKE 'M%%';

/*QUESTION 5*/
SELECT
SUM (O.QUANTITY*P.PRICE) AS TOATL_REVENUE
FROM ORDERS AS O 
JOIN PRODUCTS AS P 
ON O.ProductName = P.ProductName;

/*QUESTION 6*/
SELECT 
C.CUST_NAME,
O.QUANTITY,
P.PRICE,
(O.QUANTITY * P.PRICE) AS REVENUE
FROM ORDERS AS O 
JOIN CUSTOMERS AS C
ON C.CUST_ID = O.CustomerID
JOIN PRODUCTS AS P 
ON P.ProductName = O.ProductName;

/*QUESTION 7*/
SELECT
C.CUST_NAME,
P.PRODUCTNAME,
O.QUANTITY
FROM CUSTOMERS AS C
JOIN ORDERS AS O 
ON C.CUST_ID = O.CUSTOMERID
JOIN PRODUCTS AS P 
ON O.PRODUCTNAME = P.PRODUCTNAME
WHERE O.QUANTITY >= 1
GROUP BY P.PRODUCTNAME, C.CUST_NAME,O.QUANTITY;

/*QUEATION 8*/
SELECT


/*QUESTION 9*/
SELECT
TOP 3 
PRODUCTNAME,
AVG(QUANTITY) 
FROM ORDERS
GROUP BY PRODUCTNAME
ORDER BY 1 DESC

/*QUESTION 10*/
SELECT
PRODUCTNAME,
QUANTITY,
(COUNT(*)*100.0/AVG(QUANTITY)) AS PERCENTAGR_GREATER
FROM ORDERS
GROUP BY PRODUCTNAME , QUANTITY;


---------------------------------------------------------------------------------------
-------------------------TASK 3----------------------------------------

/*QUESTION 1*/
SELECT
C.CUST_ID,
C.CUST_NAME
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON C.CUST_ID = O.CUSTOMERID
GROUP BY C.CUST_ID,C.CUST_NAME
HAVING COUNT(DISTINCT O.PRODUCTNAME) = (SELECT COUNT(*) FROM PRODUCTS);

/*QUESTION 2*/
SELECT
P.PRODUCTID,
P.PRODUCTNAME
FROM PRODUCTS AS P
LEFT JOIN ORDERS AS O
ON O.PRODUCTNAME = P.PRODUCTNAME
GROUP BY P.PRODUCTID, P.PRODUCTNAME
HAVING COUNT(DISTINCT O.CUSTOMERID) = (SELECT COUNT(*) FROM CUSTOMERS);

/*QUESTION 3*/
SELECT
P.PRODUCTID,
P.PRODUCTNAME,
P.PRICE,
O.QUANTITY,
MONTH(O.ORDERDATE) AS MONTH,
(P.PRICE*O.QUANTITY) AS TOTAL_REVENUE
FROM PRODUCTS AS P
JOIN ORDERS AS O 
ON P.PRODUCTNAME = O.PRODUCTNAME
GROUP BY P.PRODUCTID, P.PRODUCTNAME, P.PRICE, O.ORDERDATE, O.QUANTITY;

/*QUESTION 4*/
SELECT
P.PRODUCTID,
P.PRODUCTNAME
FROM PRODUCTS AS P
JOIN ORDERS AS O 
ON P.PRODUCTNAME = O.PRODUCTNAME
GROUP BY P.PRODUCTID, P.PRODUCTNAME 
HAVING COUNT(DISTINCT O.CUSTOMERID) > (SELECT COUNT(*)*0.50 FROM CUSTOMERS);

/*QUESTION 5*/
SELECT
TOP 5
C.CUST_ID,
C.CUST_NAME,
O.ORDERID,
P.PRODUCTNAME,
O.QUANTITY,
P.PRICE,
(O.QUANTITY*P.PRICE) AS TOTAL_AMOUNT
FROM CUSTOMERS AS C
JOIN ORDERS AS O
ON C.CUST_ID = O.CUSTOMERID
JOIN PRODUCTS AS P 
ON P.PRODUCTNAME = O.PRODUCTNAME
GROUP BY C.CUST_ID, C.CUST_NAME, O.ORDERID, P.PRODUCTNAME, O.QUANTITY, P.PRICE
ORDER BY TOTAL_AMOUNT DESC;

/*QUESTION 6*/
SELECT 
C.CUST_ID,
C.CUST_NAME,
O.ORDERID,
O.ORDERDATE,
O.QUANTITY,
SUM(O.QUANTITY)OVER(ORDER BY O.QUANTITY) AS RUNNING_TOTAL
FROM CUSTOMERS AS C
JOIN ORDERS AS O 
ON C.CUST_ID = O.CUSTOMERID;

/*QUESTION 7*/
SELECT
TOP 3
C.CUST_ID,
C.CUST_NAME,
O.ORDERDATE,
O.QUANTITY
FROM CUSTOMERS AS C 
JOIN ORDERS AS O 
ON C.CUST_ID = O.CUSTOMERID
GROUP BY C.CUST_NAME, C.CUST_ID,O.ORDERDATE, O.QUANTITY
ORDER BY O.ORDERDATE DESC;
---------------------OR--------------------------------
WITH RANKEDORDERS AS (
SELECT
O.ORDERID,
O.CUSTOMERID,
O.PRODUCTNAME,
O.ORDERDATE,
O.QUANTITY,
ROW_NUMBER()OVER(PARTITION BY O.CUSTOMERID ORDER BY O.ORDERDATE DESC) AS ROWNUM
FROM ORDERS AS O
)
SELECT
*
FROM RANKEDORDERS AS R 
WHERE R.ROWNUM <= 3;

/*QUESTION 8*/
SELECT
C.CUST_NAME,
O.QUANTITY,
P.PRICE,
(O.QUANTITY*P.PRICE) AS TOATL_REVENUE
FROM CUSTOMERS AS C
JOIN ORDERS AS O 
ON C.CUST_ID = O.CUSTOMERID
JOIN PRODUCTS AS P
ON O.PRODUCTNAME = P.PRODUCTNAME
WHERE O.ORDERDATE BETWEEN '2023-07-01' AND '2023-07-30';

/*QUESTION 9*/
SELECT
C.CUST_NAME,
O.ORDERID
FROM CUSTOMERS AS C 
JOIN ORDERS AS O 
ON C.CUST_ID = O.CUSTOMERID
GROUP BY C.CUST_NAME , O.ORDERID
HAVING COUNT(O.PRODUCTNAME) >= 2
ORDER BY C.CUST_NAME

/*QUESTION 10*/
WITH NEW_CTE AS (
SELECT
C.CUST_ID,
C.CUST_NAME,
O.QUANTITY,
P.PRICE,
(O.QUANTITY*P.PRICE) AS TOTAL_REVENUE
FROM CUSTOMERS AS C
JOIN ORDERS AS O 
ON C.CUST_ID = O.CUSTOMERID 
JOIN PRODUCTS AS P 
ON O.PRODUCTNAME = P.PRODUCTNAME
)
SELECT
CUST_NAME,
AVG(TOTAL_REVENUE) AS AVG_REVENUE
FROM NEW_CTE 
GROUP BY CUST_NAME 
ORDER BY AVG_REVENUE DESC;









