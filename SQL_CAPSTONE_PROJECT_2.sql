CREATE DATABASE SQL_EMPLOYEE_DETAILS_PROJECT_2;
-------------------------------------------------------------
USE SQL_EMPLOYEE_DETAILS_PROJECT_2;
--------------------------------------------------------------
CREATE TABLE EMPLOYEEDETAILTABLE
(EMP_ID INT PRIMARY KEY,
 FIRST_NAME VARCHAR (255),
 LAST_NAME VARCHAR (255),
 SALARY MONEY,
 JOINING_DATE  DATETIME,
 DEPARTMENT CHAR (255),
 GENDER CHAR (100)
 );
 SELECT * FROM EMPLOYEEDETAILTABLE
 ------------------------------------------------------------------
 INSERT INTO EMPLOYEEDETAILTABLE VALUES
 (1,'VIKAS','AHLAWAT',600000,'2013-02-12 11:16:10','IT','MALE'),
 (2,'NIKITA','JAIN',530000,'2013-02-14 11:16:10','HR','FEMALE'),
 (3,'ASHISH','KUMAR',1000000,'2013-02-14 11:16:10','IT','MALE'),
 (4,'NIKHIL','SHARMA',480000,'2013-02-15 11:16:10','HR','MALE'),
 (5,'ANISH','KEDIA',500000,'2013-02-16 11:16:10','PAROLL','MALE');
 ---------------------------------------------------------------------------
 CREATE TABLE PROJECT_DETAIL_TABLE
 (PROJECT_ID INT PRIMARY KEY,
  EMP_ID INT,
  PROJECT_NAME VARCHAR(255)
  );
  SELECT* FROM PROJECT_DETAIL_TABLE;
  ---------------------------------------------------------------------------------
INSERT INTO PROJECT_DETAIL_TABLE VALUES
(01,1,'TASK_TRACK'),
(02,1,'CLP'),
(03,1,'SURVEY_MANAGEMENT'),
(04,2,'HR_MANAGEMENT'),
(05,3,'TASK_TRACK_02'),
(06,3,'GRS'),
(07,3,'DDS'),
(08,4,'HR_MANAGEMENT_02'),
(09,6,'GL_MANAGEMENT');
---------------------------------------------------------------------------------------------
--------------------------------QUESTIONS AND QUERIES----------------------------------
/*QUESTION 1*/
SELECT
* 
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 2*/
SELECT
FIRST_NAME
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 3*/
SELECT
UPPER(FIRST_NAME) AS FIRST_NAME
FROM EMPLOYEEDETAILTABLE;
 
/*QUESTION 4*/
SELECT
LOWER(FIRST_NAME) AS first_name
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 5*/
SELECT
CONCAT(FIRST_NAME,'  ',LAST_NAME) AS NAME
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 7*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE FIRST_NAME LIKE 'A%';

/*QUESTION 8*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE LAST_NAME LIKE 'A%';

/*QUESTION 9*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE FIRST_NAME LIKE '%H';

/*QUESTION 10*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE FIRST_NAME BETWEEN 'A' AND 'P';

/*QUESTION 11*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE FIRST_NAME  NOT BETWEEN 'A' AND 'P';

/*QUESTION 12*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE GENDER LIKE '%LE' AND LEN(GENDER) = 4;

/*QUESTION 13*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE FIRST_NAME LIKE 'A%' AND LEN(FIRST_NAME) = 5;

/*QUESTION 15*/
SELECT
DISTINCT(DEPARTMENT) AS DEPARTMENT
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 16*/
SELECT
MAX(SALARY) AS HIGHEST_SALARY
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 17*/
SELECT
MIN(SALARY) AS LOWEST_SALARY
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 18*/
SELECT
FORMAT(JOINING_DATE,'dd MMM yyyy') AS JOININGDATE
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 19*/
SELECT
FORMAT(JOINING_DATE,'yyyy/MMM/dd') AS JOININGDATE
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 20*/
SELECT
FORMAT(JOINING_DATE,'%H:%m:%s') AS TIME_PART
FROM EMPLOYEEDETAILTABLE;
 
/*QUESTION 21*/
SELECT
YEAR(JOINING_DATE)
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 22*/
SELECT
MONTH(JOINING_DATE)
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 23*/
SELECT
GETDATE()

/*QUESTION 24*/
SELECT
GETUTCDATE()

/*QUESTION 24(A)*/
SELECT
FIRST_NAME,
GETDATE() AS CURRENT__DATE,
JOINING_DATE,
DATEDIFF(MONTH,JOINING_DATE,GETDATE()) AS DATE_DIFF_IN_MONTHS
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 25*/
SELECT
FIRST_NAME,
GETDATE() AS CURRENT__DATE,
JOINING_DATE,
DATEDIFF(DAY,JOINING_DATE,GETDATE()) AS DATE_DIFF_IN_DAYS
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 26*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE YEAR(JOINING_DATE) = 2013;

/*QUESTION 27*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE MONTH(JOINING_DATE) = 1;

/*QUESTION 28*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE MONTH(JOINING_DATE) = 1;

/*QUESTION 29*/
SELECT
COUNT(*) AS TOTAL_NO_OF_EMPLOYEE
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 31*/
SELECT
TOP 1 
*
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 32*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE FIRST_NAME = 'VIKAS'OR FIRST_NAME ='NIKHIL' OR FIRST_NAME='ASHISH';

/*QUESTION 33*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE FIRST_NAME NOT IN ('VIKAS','NIKHIL','ASHISH');

/*QUESTION 34*/
SELECT
RTRIM(FIRST_NAME) AS FIRST_NAMEE
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 35*/
SELECT
LTRIM(FIRST_NAME) AS FIRST_NAMEE
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 36*/
SELECT
FIRST_NAME,
CASE
WHEN GENDER = 'MALE' THEN 'M'
WHEN GENDER = 'FEMALE' THEN 'F'
ELSE 'UNKNOWN'
END AS EMP_GENDER
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 37*/
SELECT
CONCAT('HELLO','  ',FIRST_NAME) AS HELLO_FIRST_NAME
FROM EMPLOYEEDETAILTABLE;

/*QUESTION 38*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE SALARY > 600000;

/*QUESTION 39*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE SALARY < 700000;

/*QUESTION 40*/
SELECT
*
FROM EMPLOYEEDETAILTABLE
WHERE SALARY BETWEEN 500000 AND 600000;

/*QUESTION 41*/
SELECT
*
FROM PROJECT_DETAIL_TABLE;

/*QUESTION 42*/
SELECT
DEPARTMENT,
SUM(SALARY) AS SUM_OF_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT;

/*QUESTION 43*/
SELECT
DEPARTMENT,
SUM(SALARY) AS SUM_OF_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT
ORDER BY SUM_OF_SALARY ASC;

/*QUESTION 44*/
SELECT
DEPARTMENT,
SUM(SALARY) AS SUM_OF_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT
ORDER BY SUM_OF_SALARY DESC;

/*QUESTION 45*/
SELECT
DEPARTMENT,
COUNT(DEPARTMENT) AS COUNT_DEPT ,
SUM(SALARY) AS SUM_OF_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT;

/*QUESTION 46*/
SELECT
DEPARTMENT,
AVG(SALARY) AS AVG_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT 
ORDER BY AVG_SALARY ASC;

/*QUESTION 47*/
SELECT
DEPARTMENT,
MAX(SALARY) AS MAX_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT 
ORDER BY MAX_SALARY ASC;

/*QUESTION 48*/
SELECT
DEPARTMENT,
MIN(SALARY) AS MIN_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT 
ORDER BY MIN_SALARY ASC;

/*QUESTION 49*/
SELECT
DEPARTMENT,
MIN(SALARY) AS MIN_SALARY
FROM EMPLOYEEDETAILTABLE
GROUP BY DEPARTMENT 
ORDER BY MIN_SALARY DESC;

/*QUESTION 50*/
SELECT
*
FROM EMPLOYEEDETAILTABLE AS E
JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID;

/*QUESTION 51*/
SELECT
E.FIRST_NAME AS EMPLOYEE_NAME,
P.PROJECT_NAME
FROM EMPLOYEEDETAILTABLE AS E
JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID
ORDER BY E.FIRST_NAME;

/*QUESTION 52*/
SELECT
E.FIRST_NAME AS EMPLOYEE_NAME,
P.PROJECT_NAME
FROM EMPLOYEEDETAILTABLE AS E
LEFT JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID
ORDER BY E.FIRST_NAME;

/*QUESTION 53*/
SELECT
COALESCE(CONCAT(E.FIRST_NAME,' ',E.LAST_NAME),'NO PROJECT ASSIGNED') AS EMPLOYEE_NAME,
COALESCE(P.PROJECT_NAME,'NO PROJECT ASSIGNED') AS PROJECT_NAME
FROM EMPLOYEEDETAILTABLE AS E
LEFT JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID
ORDER BY E.FIRST_NAME;

/*QUESTION 54*/
SELECT
P.PROJECT_NAME,
E.FIRST_NAME
FROM PROJECT_DETAIL_TABLE AS P 
LEFT JOIN EMPLOYEEDETAILTABLE AS E
ON P.EMP_ID = E.EMP_ID 
ORDER BY E.FIRST_NAME;

/*QUESTION 55*/
SELECT
*
FROM EMPLOYEEDETAILTABLE AS E 
FULL JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID;

/*QUESTION 56*/
SELECT
E.FIRST_NAME,
P.PROJECT_NAME
FROM EMPLOYEEDETAILTABLE AS E 
FULL JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID;

/*QUESTION 57*/
SELECT
E.FIRST_NAME,
P.PROJECT_NAME
FROM EMPLOYEEDETAILTABLE AS E 
FULL JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID;

/*UESTION 58*/
SELECT
E.FIRST_NAME,
COUNT(P.PROJECT_ID) AS NO_OF_PROJECTS_ASSIGNED
FROM EMPLOYEEDETAILTABLE AS E 
JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID
GROUP BY E.FIRST_NAME
HAVING COUNT(P.PROJECT_ID) > 1;

/*QUESTION 59*/
SELECT
E.FIRST_NAME,
E.LAST_NAME,
P.PROJECT_NAME,
COUNT(P.EMP_ID) AS NO_OF_EMP_ASSIGNED
FROM EMPLOYEEDETAILTABLE AS E 
JOIN PROJECT_DETAIL_TABLE AS P
ON E.EMP_ID = P.EMP_ID
GROUP BY E.FIRST_NAME, E.LAST_NAME, P.PROJECT_NAME
HAVING COUNT(P.EMP_ID) > 1;

/*QUESTION 60*/
SELECT
*
FROM EMPLOYEEDETAILTABLE AS E 
CROSS JOIN PROJECT_DETAIL_TABLE AS P;